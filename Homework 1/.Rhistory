library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
old.par <- par(mfrow=c(1,3),ps=16)
for ( iTry in 1:3 ) {
x<-rnorm(50,mean=0,sd=1)
hist(x,breaks=10,col='lightgreen',main=paste("Average =",signif(mean(x),3)))
}
par(old.par)
ggplot(transform(data.frame(x=rnorm(150),y=rep(1:3,50)),y=paste("Average =",signif(unlist(lapply(unstack(data.frame(x,y)),mean))[y],3))),aes(x=x))+geom_histogram(binwidth=0.5,colour="black",fill='lightgreen')+facet_wrap(~y)
# different sample sizes we are going to try:
sample.sizes=c(3,10,50, 100, 500, 1000)
# we will use the vector below to save the standard deviations of the
# *distribution of the means* at each given sample size.
# Note that it's ok to initialize with an empty vector of length 0 - if we index
# it out-of-bounds while assigning a value later, the vector will autoexpand
# on assignment, see examples in the slides)
mean.sds = numeric(0)
j <- 1
for ( N in sample.sizes ) { # try different sample sizes
m <- numeric(0)
# INSERT YOUR CODE HERE: (you may want to check the slides).
for (i in 1:1000) {
m[i] <- mean(rnorm(N))
}
mean.sds[j] <- sd(m)
j <- j + 1
}
# 1) At each given N (i.e. in each iteration of the outer loop) you have to draw large number
# (e.g. 1000) of samples of that size N, from the distribution of your choice (e.g. normal,
# uniform, exponential, ...), and calculate the mean of *each* of those samples.
# Save all those means into a vector 'm'.
# 2) Now, with vector m in hand, we want to characterize how much the sample mean fluctuates
# from one experiment (experiment=drawing a sample of N measurements) to the next. Instead of just
# plotting a histogram as we did in class, this time we will calculate the standard
# deviation of the distribution represented by the vector m. Use function sd() to achieve that.
#
# 3) save the result (sd of the distributions of the means for current N) into the vector mean.sds
# defined above. You can use c() to concatenate, or you can use an indexing variable;
#  in the latter case you will need to add it to the code and increment properly
# at this point, you should have the vector mean.sds filled. It should have length 6 and keep the
# calculated values of the standard deviation of the mean (known as the standard error of the mean, SEM)
# at different sample sizes: mean.sds[1] is the SEM at N=3, mean.sds[2] is the SEM at N=10, and so on.
# let us now plot the SEM (i.e. the "typical" error we expect the sample mean to exhibit in any
# given experiment) as a function of the sample size, N.
plot(sample.sizes,mean.sds, main="SEM vs sample size",pch=19, xlab="Sample Size", ylab="SEM")
lines(sample.sizes,1/sqrt(sample.sizes),col='blue')
N <- 5  # the number of i.i.d. variables X we are going to sum
# how many times we are going to repeat the "experiment" (see the text above for what we now call an experiment):
n.repeats <- 1000
s.values <- numeric() # we will use this vector to store the value of the sum, s, in each experiment
for (n in 1:N) {
for (i.exp in 1:n.repeats) { # repeat the experiment 'n.repeats' times
# More details below. In each "experiment" we must draw the values x1, ..., xN of all the
# random variables we are going to sum up:
x <- runif(n)
# the "measured" value of the random variable S in the current experiment is the sum of       x1...xN;
# calculate it and save into the vector s.values:
s.values[i.exp] <- sum(x)
}
hist(s.values, col="pink", main=paste("1000 Repeats of Uniform Distribution Sampling of Size",n), xlab="Sum of each experiment")
}
